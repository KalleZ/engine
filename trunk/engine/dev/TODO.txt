

	Tuxxedo Engine 1.0.0
	----------------------

	Improve development tools (Kalle)
	 - Add styles support
	 - Re-implement old tools
	   - Options
	   - Templates

	Redesign the tuxxedo_doc_error() output (Kalle)
	Fix std exception error messages not respecting the $intl setting when an identifier is not found when loading (Kalle)


	Namespaces (Kalle)
	 - Fix loading, line feeds mixing, tabs vs spaces and all that happens to be very inconsistent in the engine
	 - Fix Registry references and class references
	 - Redesign bootstrap.php from the ground and up to make it easier to work on
	 - Remove TUXXEDO constant check
	 - Fix docblocks
	 - Fix global constants to be prefixed with \
	 - Rewrite the autoloader for better error handling, or atleast refactor it internally

	Move query builder, generic dm and configuration parsers to its own playground branch so we can focus on Engine (Kalle)


	Tuxxedo Engine Future
	----------------------
	

	Add new datamanagers
	 - Language
	 - Options
	 - Permission
	 - Phrase
	 - Phrasegroup
	 - Template
    
	Improve development tools
	 - Add internationalization support
	 - Add user support
	 - Add documenetation generator (eliminate /dev/api/ stuff)
	 - Integrate api_analyze.php

	Add a generic pagination class with a default Engine database pagination driver

	Implement a temporary memory storage, with backends for APC etc.
	Implement documentation generators for the google wiki unless we have setup a custom thing up somewhere
	Implement the query builder classes
	Implement session adapters with backends for APC etc.
	Implement validators
	Implement API accessors
	
	Improve internationalization
	 - Add the possibility to have different backends for phrases
	 - Add language auto detection based on the request headers and iso codes for non logged in users
	 - Add translation for /dev/tools

	Look at implementing playground projects
	 - Query builder
	 - Configuration parser (Array, Xml, Ini, JSON)
	 - Generic Datamanager

	Change SQL queries to be non-mysql compatible
	Change the API generators to be generic and with more output formats
	Change the structure of the /dev/tools utilities structure to be autoloadable
