



	Tuxxedo Engine 1.1.0
	------------------------------------------------

	Added new datamanager validation constant to allow fields to be empty (Kalle)
	Added virtual fields and virtual field hooks in datamanager adapters (Kalle)
	Added developmental IO utilities class (Kalle)
	Added new scripts to /dev/scripts: (Kalle)
	 - sync_templates.php
	Added new DevTools: (Kalle)
	 - Style & Templates manager
	 - User authentication
	 - User permissions
	Added CLI support for the developmental scripts in /dev/scripts (Kalle)
	Added options to the datamanager adapters, which replaces the $intl parameter on the factory method (Kalle)
	Added new datamanagers: (Kalle)
	 - Template
	Added the concept of parent datamanagers, shutdown handlers and improved way to execute hooks (Kalle)
	Added a new optional parameter to the datamanager save method to prohibit execution of hooks (Kalle)
	Added support for throwing exceptions if the autoloader fails to load with fallback to the old behaviour (Kalle)
	Added support for loading helper classes into the runtime (Kalle)
	Added support for regular expressions within autoloading matches (Kalle)
	Added new functions: (Kalle)
	 - page_print()
	Added the development tools theme to all default templates, including a new index page (Kalle)
	Added a new parameter on the view constructor to allow setting variables at construction time (Kalle)
	Added a new Template class thats not encapsulated within the MVC component (Kalle)
	Added more configurative options to the template compiler DevTool to allow more generic compilations (Kalle)
	Added the possibility to unload templates at runtime (Kalle)
	Added the permission database table and runtime defined constants (Kalle)
	Added support for exporting Docblock tags when running api_analyze.php (Kalle)
	Added a new DevTool class to impersonate a user (Kalle)
	Added a new method to the datamanager class to fetch the parent datamanager (Kalle)
	Added contexts to datamanagers so its easier for hooks to figure out what to do in a certain context (Kalle)
	Added a new template compiler option to make failed calls to test() verbose instead of silent (Kalle)

	Changed the datamanager adapters to internally use the new initializer method (Kalle)
	Changed the datamanager to have hooks and migrated the APICache interface into it (Kalle)
	Changed CSRF tokens to be SHA1 hashed rather than MD5 hashed (Kalle)
	Changed the random string generator to be more variable (Kalle)
	Changed the debugging backtraces to not Engine backtrace caller (Kalle)
	Changed the datastore to skip attempting to reload elements if cache is called twice (Kalle)
	Changed the datamanager adapters to fetch the new identifer when inserting a new id record (Kalle)
	Changed the datamanager adapters to invalidate empty fields unless specified by the adapter (Kalle)
	Changed datamanager adapters to throw standard exceptions instead of basic ones in case of an error (Kalle)
	Changed the datamanager deletion method to signal adapters with cache hooks to rebuild the datastore (Kalle)
	Changed the styles to contain the ids of which templates thats assigned to the style (Kalle)
	Changed the name of the 'Filter' class to be 'Input' (Kalle)
	Changed style engines to load faster if multiple instances of the same handle have been loaded (Kalle)
	Changed the custom loading logic in datamanagers and style storage engines to autodetect custom classes (Kalle)
	Changed the MVC specific exceptions to use the concept of previous exceptions both internally and in the API (Kalle)
	Changed the view constructor, so that it supports setting the layout mode at instanciation (Kalle)
	Changed the views to not escape double quotes if the view has layout mode active (Kalle)
	Changed the undocumented docblocks while parsing the source in api_analyze.php to be more verbose (Kalle)
	Changed datamanagers that have the LOAD_ONLY option enabled data to be visiable thru the array access syntax (Kalle)
	Changed templateids from being a database field to be a virtually populated field from datastore.php (Kalle)
	Changed result sets' getNumRows methods to return 0 if the result is destroyed (Kalle)

	Fixed api_analyze.php to respect curly braces to not identify some methods as 'static' (Kalle)
	Fixed api_analyze.php to parse methods/functions with inline closures correctly (Kalle)
	Fixed fatal error if page() was called without the style component loaded (Kalle)
	Fixed namespace alias rules in functions.php and functions_options.php to inherit the 'Exception' namespace (Kalle)
	Fixed rounded corners on tuxxedo_doc_error()'s using Gecko based browsers (Kalle)
	Fixed error_reporting not being reset when testing compiled templates (Kalle)
	Fixed various aliasing rules all around the Engine (Kalle)
	Fixed possible error while attempting to display an error due to wrong initialization order in the developmen tools (Kalle)
	Fixed array handling of raw data when using the filter component using the ext/filter backend from PHP (Kalle)
	Fixed exception calls in datamanager adapters to resolve correctly (Kalle)
	Fixed version comparison logic in the requirements test (Kalle)
	Fixed the $goback parameter naming on page(), so that the go back button will work correct (Kalle)
	Fixed possible naming conflict error messages on the DevTools due to a JavaScript bug (Kalle)
	Fixed possible bugs in the old partically implemented permission system thats now fully functional (Kalle)
	Fixed a bug that would not trim fatal errors caught in the shutdown handler entirely (Kalle)


	Tuxxedo Engine 1.0.0
	------------------------------------------------

	Initial release