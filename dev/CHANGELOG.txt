



	Tuxxedo Engine 1.3.0 "Intergalactic"
	------------------------------------------------

	Fixed validation of usergroups when adding a new user using the datamanager (Kalle)

	Removed \Tuxxedo\Database\Driver\Mysql, Classic ext/mysql support -- Use mysqli instead (Kalle)



	Tuxxedo Engine 1.2.1 "Beloved"
	------------------------------------------------

	Added the $only_table_name parameter (defaults to false) in \Tuxxedo\Helper\Database::getTables() (Kalle)
	Added a check to datamanagers to make them only send out the needed SQL for the changed data, this have the following API changes: (Kalle)
	 - Added \Tuxxedo\Datamanager\Adapter::$changed_data
	 - Added \Tuxxedo\Datamanager\Adapter::getChangedData()
	 - Removed \Tuxxedo\Datamanager\Adapter::$original_data
	Added \Tuxxedo\Helper\Database::isDriverPdo() (Kalle)

	Changed mysql, mysqli & pdo_mysql to set sql_mode to 'ANSI' (Kalle)
	Changed the 'Dump datastore' feature to escape HTML output (Kalle)
	Changed the 'Table status' feature to show when used with PostgreSQL (Kalle)

	Fixed a bug that would cause a notice when saving using some datamanagers where their fields did not have a validation specified (Kalle)
	Fixed loading of datamanagers on case sensitive file systems when a custom one is used (Kalle)
	Fixed an E_STRICT notice when calling test_login() without having \Tuxxedo\User loaded (Kalle)



	Tuxxedo Engine 1.2.0 "Beloved"
	------------------------------------------------

	Added the requirement of PHP 5.4.0+ (Kalle)
	Added the documentation generator (Kalle)
	Added the uploading API (Kalle)
	Added the event handling subsystem (Kalle)
	Added support for PostgreSQL database systems (Kalle)
	Added XML parsers and related APIs with fallback backends for: (Kalle)
	 - SimpleXML
	 - DOM
	Added new and improved debugging mode: (Kalle)
	 - SQL queries trace mode
	 - Rewritten debug backtracing API with more verbosity
	 - Tracker
	Added new datamanagers: (Kalle)
	 - Language
	 - Phrase
	 - Phrasegroup
	Added new helpers: (Kalle)
	 - Timer
	Added the new internationalization DevTools tool (Kalle)
	Added support for cloning datamanagers (Kalle)
	Added the \Tuxxedo\Options class, so that $registry->options also work with categories (Kalle)
	Added \Tuxxedo\MVC\Controller::getPreloadables() to get preloadable data for controllers (Kalle)
	Added \Tuxxedo\Intl::getISOCodes() to get the browser request language based on ISO codes (Kalle)
	Added \Tuxxedo\Datastore::getRef() to get a reference of datastore data rather than copying it (Kalle)
	Added a new theming to the default templates and tuxxedo_doc_error() based on the DevTools style (Kalle)
	Added a language auto detection option for non logged in users based on the browser's ISO codes (Kalle)
	Added two magic hooks for classes that extends the bootstraper: (Kalle)
	 - postInit()
	 - preInit()
	Added new methods to \Tuxxedo\Design\InfoAccess: (Kalle)
	 - export()
	 - import()
	Added support global template variables using \Tuxxedo\Template (Kalle)
	Added \Tuxxedo\Template\Layout as a non MVC version of \Tuxxedo\MVC\View\Layout (Kalle)
	Added the $show_all parameter to \tuxxedo_multi_error() (Kalle)
	Added \Tuxxedo\Exception\BasicMulti (Kalle)
	Added CLI support to the core, error handlers, and 'tuxxedo_cli_error()' for terminals (Kalle)
	Added tuxxedo_basic_error() that picks a suitable SAPI error handler itself (Same as \Tuxxedo\Exception\Basic) (Kalle)
	Added \DevTools\Utilities\IO::STYLE_HIDDEN_DOT (cli only) (Kalle)
	Added more slightly better UI for /dev/scripts when used on the CLI (Kalle)
	Added the $populated parameter to \Tuxxedo\Datamanager\Adapter::getVirtualFields() (Kalle)
	Added the $where parameter to \Tuxxedo\Helper\Database::count() (Kalle)
	Added the ability to actually 'kill' a session by forcing it to be rehashed on next request (Kalle)
	Added a minor tool to the session devtool that can mark a session as expired for debugging purposes (Kalle)
	Added the \Tuxxedo\Datamanager::getDataStruct() method (Kalle)
	Added the ability for 'header' and 'footer' templates to be customized, no longer requiring them to be called a specific name (Kalle)
	Added the \Tuxxedo\Intl\Phrasegroup::getName() method (Kalle)
	Added a new datamanager mechanic for preventing the auto insertion of 'NULL' on empty fields (Kalle)
	Added new functions to the \Tuxxedo\Utilities class: (Kalle)
	 - \Tuxxedo\Utilities::trimSql()
	Added the \Tuxxedo\Session::restart() method (Kalle)
	Added new docblock tags to the allowance list: (Kalle)
	 - @changelog
	 - @ignore
	 - @see
	 - @since
	 - @todo
	 - @wip
	Added @changelog and @since docblock tags around most of the core (Kalle)
	Added \Tuxxedo\Utilities::datef() as a shorthand for \Tuxxedo\Utilities::date() without a timestamp (Kalle)
	Added a magic '.tuxxedo' file to engine_api.json, this contains meta information about the JSON format for readers (Kalle)
	Added \Tuxxedo\Helper\Database::getColumns() (Kalle)
	Added the posibility for datamanager adapters to retain the original data if modified from the outside API internally (Kalle)
	Added traits to the allowance of items being autoloadable (Kalle)
	Added SQLite support in \Tuxxedo\Helper\Database::getTables() (Kalle)

	Changed the codebase to be SQL standards compliant for quotations, this means MySQL requires 'sql_mode' to be set to 'ANSI' (Kalle)
	Changed the code statistics tool to also ignore .dump, .txt & .tuxx (Kalle)
	Changed \Tuxxedo\Intl\Phrasegroup to extend the InfoAccess pattern (Kalle)
	Changed \Tuxxedo\Intl::getPhrases() to return an array rather than an instance of \ArrayObject and an empty array instead of false (Kalle)
	Changed the autoloader to trim paths on errors (Kalle)
	Changed the authentication tester tool to not use sessions at all (Kalle)
	Changed \Tuxxedo\Input::process() to be protected rather than private (Kalle)
	Changed \Tuxxedo\Session to always work whether or not the datastore is loaded (Kalle)
	Changed \Tuxxedo\MVC\Router to support __invoke(), which calls the controller dispatcher unlike the route method (Kalle)
	Changed \Tuxxedo\Bootstrap::setHook() to support \Tuxxedo\Bootstrap::FLAG_CORE (Kalle)
	Changed \Tuxxedo\Datamanager\Adapter::$hooks_executor to be a method, \Tuxxedo\Datamanager\Adapter::hooks() (Kalle)
	Changed the datastore datamanager to not being able to fail on invalid name if non existant component is supplied (Kalle)
	Changed various behaviours of \tuxxedo_multi_error() due to the new $show_all parameter (Kalle)
	Changed the class name of '\Tuxxedo\Exception\FormData' to '\Tuxxedo\Exception\Multi' (Kalle)
	Changed the name of '\Tuxxedo\Exception\Multi::getFields()' to '\Tuxxedo\Exception\Multi::getData()' (Kalle)
	Changed the syntax of the 'options' datastore element to also carry a category
	Changed the name of 'tuxxedo_doc_errorf()' to 'tuxxedo_errorf()' and is now CLI compatible (Kalle)
	Changed tuxxedo_doc_error() to no longer attempt to escape HTML in error messages (Kalle)
	Changed \Tuxxedo\Exception\MVC\* exceptions to be regular exceptions instead of basic ones (Kalle)
	Changed tuxxedo_debug_backtrace() to no longer escape $trace->callargs using htmlentities() (Kalle)
	Changed tuxxedo_debug_backtrace() to work with handlers, so customer handlers are correctly reported as such in traces (Kalle)
	Changed api_analyze.php to show the number of unique namespaces rather than total declarations in the statistics summary (Kalle)
	Changed the method name '\Tuxxedo\Intl::filter()' to '\Tuxxedo\Intl::doPhrasegroupFilter()' (Kalle)
	Changed the method name '\Tuxxedo\Datastore::filter()' to '\Tuxxedo\Datastore::doCacheFilter()' (Kalle)
	Changed the API dump to only be exported as json, and relocated it to /dev/scripts/api/engine_api.json, causing the JSON extension to be required for api_analyze.php to function (Kalle)
	Changed the name of style.defaultstyle to style.isdefault (Kalle)
	Changed the name of language.default to language.isdefault (Kalle)
	Changed the name of phrasegroup.language to phrasegroup.languageid (Kalle)
	Changed the following procedural functions to live within a class; \Tuxxedo\Utilities: (Kalle)
	 - tuxxedo_date() > \Tuxxedo\Utilities::date()
	 - tuxxedo_redirect() > \DevTools\Utilities::redirect()
	 - tuxxedo_header_redirect() > \DevTools\Utilities::headerRedirect()
	Changed \DevTools\Utilities\IO::input() to behave differently under CLI, parameters like `-test' (with no value) now returns true (Kalle)
	Changed DevTools cookie and session variables to no longer be prefixed with '__' (Kalle)
	Changed page() to be a part of \DevTools rather than \Tuxxedo (Kalle)
	Changed tuxxedo_exception_handler() to internally use \Tuxxedo\Template\Layout and \Tuxxedo\Template for GUI errors (Kalle)
	Changed \Tuxxedo\Datamanager\Adapter::offsetGet() to report an error on invalid property access (Kalle)
	Changed \Tuxxedo\Datamanager\Adapter\User::isAvailableUserField()'s return value to be negated (Kalle)
	Changed api_analyze.php to stop analyzing when it hits a __halt_compiler() instruction (Kalle)
	Changed \Tuxxedo\Bootstrap::init() to no longer unset() preloadables, but reset it to an empty array (Kalle)
	Changed the datamanager API to use class constants over properties since that data only is readonly. This means that a  these are: (Kalle)
	 - \Tuxxedo\Datamanager\Adapter::$dmname > \Tuxxedo\Datamanager\Adapter\*::DM_NAME
	 - \Tuxxedo\Datamanager\Adapter::$idname > \Tuxxedo\Datamanager\Adapter\*::ID_NAME
	 - \Tuxxedo\Datamanager\Adapter::$tablename > \Tuxxedo\Datamanager\Adapter\*::TABLE_NAME
	Changed the iteratable class to be an interface (Kalle)
	Changed \Tuxxedo\Helper\Database::getTables() to return an array instead of a database result object (Kalle)

	Fixed a possible off-by-one byte error in recursive_glob() (Kalle)
	Fixed a wrong prototype causing setRouter() to only accept 'Uri' routers (Kalle)
	Fixed not all actual callbacks in debug traces being reported as callbacks (Kalle)
	Fixed a formatting error if a template fails to load in \Tuxxedo\Template::parse() (Kalle)
	Fixed a couple of issues where tuxxedo_trim_path() didn't work on non-absolute paths (Kalle)
	Fixed some rare conditions that could potentially cause fatal errors by using the User API (Kalle)
	Fixed some rare remaining issues in resolving namespace aliases in api_analyze.php (Kalle)
	Fixed a bug in \Tuxxedo\MVC\Router::route() that could cause fatal errors rather than exceptions if loading failed (Kalle)
	Fixed fatal error if a closing </if> was missing when compiling a template (Kalle)
	Fixed fatal error when trying to autoload  \Tuxxedo\Style\Storage\Filesystem on a case sensitive filesystem (Kalle)
	Fixed a bug in \Tuxxedo\Loader::addRouteAsCallback() that caused custom separators and roots not to be correctly set (Kalle)
	Fixed check_dm_phrases.php to correctly function if no virtual fields are available (Kalle)
	Fixed an issue in the style datamanager that would cause an incorrect sync to the datastore when re-collecting template ids (Kalle)
	Fixed the session datamanager so that it will actually allocate the \Tuxxedo\Datamanager\Adapter::$data property if possible (Kalle)
	Fixed an issue that would cause some components to not being able to be loaded on case sensitive file systems (Datamanagers, Helpers & Style storage)
	Fixed a bug in api_analyze.php so that it will use the correct datatype + depth for parameters (Kalle)
	Fixed a bug in api_analyze.php so that namespaces using curly braces will be correctly picked up (Kalle)
	Fixed a bug in api_analyze.php so that names are resolved correctly when aliases have a different name (Kalle)
	Fixed a bug in api_analyze.php so that properties declared with 'var' are considered 'public' (Kalle)
	Fixed a bug in api_analyze.php so that docblock descriptions are correctly covered to UTF-8 (Kalle)
	Fixed a bug in api_analyze.php so that constants declared with define() are parsed correctly (Kalle)
	Fixed a styling issue on the Options DevTools page if the virtual 'orphan' category was present (Kalle)
	Fixed a bug in the SQLite database driver, causing dublicate data to be allocated (Kalle)
	Fixed a bug in the DevTools requirement check, causing a warning if an optional requirement is not present to mark it as a mandatory requirement was not met (Kalle)

	Removed the optional requirement on getopt() (Kalle)
	Removed the magic 'acl' property from controllers (Kalle)
	Removed the \Tuxxedo\Exception\MVC\InvalidPermission exception (Kalle)
	Removed \Tuxxedo\Intl\Phrasegroup::getPhrase() (Kalle)
	Removed \Tuxxedo\Intl\Phrasegroup::getPhrases() (use \Tuxxedo\Design\InfoAccess::export()) (Kalle)
	Removed the 'parameters' field structure option in datamanagers (Kalle)
	Removed tuxxedo_multi_error() from the debug backtrace descriptions (Kalle)
	Removed multi support from the autoloader routing methods: (Kalle)
	 - \Tuxxedo\Loader::routeAsPath()
	 - \Tuxxedo\Loader::routeAsRegex()
	 - \Tuxxedo\Loader::routeAsCallback()
	Removed the CSRF code from \Tuxxedo\User, until a better implementation is implemented, effectively removing the following methods: (Kalle)
	 - \Tuxxedo\User::getCSRFToken()
	 - \Tuxxedo\User::newCSRFToken()
	Removed the case insensitivity for 'header' and 'footer' templates when using 'layout'-mode in \Tuxxedo\Template (Kalle)
	Removed auto convertion to UTF-8 when editing a template in the DevTools (Kalle)
	Removed old global constants: (Kalle)
	 - TUXXEDO_DEBUG
	 - TUXXEDO_SELF
	 - TUXXEDO_USERAGENT
	Removed the $debug_trim parameter on tuxxedo_trim_path() (Kalle)
	Removed the dependency on changing certain php.ini values (html_errors & magic_quotes_runtime) (Kalle)
	Removed the $registry->configuration variable when initializing the bootstraper (Kalle)
	Removed the 'work-in-progress' notices from api_analyze.php (Kalle)
	Removed DevTools protective mode '2' (Kalle)
	Removed the \Tuxxedo\Database\Driver::getDriverRequirements() method from all drivers (Kalle)
	Removed the 'final' restriction on the following methods: (Kalle)
	 - \Tuxxedo\Database::invoke()
	 - \Tuxxedo\Database::setShutdownQuery()
	 - \Tuxxedo\Database::getNumQueries()
	 - \Tuxxedo\Database::getQueries()
	 - \Tuxxedo\MVC\Controller::setRouter()
	 - \Tuxxedo\MVC\Controller::setLayout()
	 - \Tuxxedo\MVC\Controller::SetView()
	 - \Tuxxedo\MVC\Controller::dispatch()
	Removed the following functions: (Kalle)
	 - page_print()
	 - tuxxedo_error()
	 - tuxxedo_error_list()
	Removed the exception that could be thrown when creating new helpers (Kalle)
	Removed the clutter code in the bootstraper and re-implemented it using the \Tuxxedo\Bootstraper hooks (Kalle)7
	Removed \Tuxxedo\Registry::unload() (use \Tuxxedo\Registry::__unset()) (Kalle)

	Template changes:
	 - Updated
	   - error
	   - header
	   - index
	   - redirect



	Tuxxedo Engine 1.1.0 "Fawks"
	------------------------------------------------

	Added new datamanager and validation constant to allow fields to be empty (Kalle)
	Added virtual fields and virtual field hooks in datamanager adapters (Kalle)
	Added a developmental IO utilities class (Kalle)
	Added new scripts to /dev/scripts: (Kalle)
	 - check_dm_phrases.php
	 - sync_templates.php
	Added new DevTools: (Kalle)
	 - Style & Templates manager
	 - Users & Usergroups manager
	 - Permission manager
	 - User authentication tester
	 - Table status
	 - Configuration file viewer
	Added CLI support for the developmental scripts in /dev/scripts (Kalle)
	Added options to the datamanager adapters, which replaces the $intl parameter on the factory method (Kalle)
	Added new datamanagers: (Kalle)
	 - Datastore
	 - Option
	 - Optioncategory
	 - Permission
	 - Template
	Added the concept of parent datamanagers, shutdown handlers and an improved way to execute hooks (Kalle)
	Added a new optional parameter to the datamanager save method to prohibit execution of hooks (Kalle)
	Added support for throwing exceptions if the autoloader fails to load with fallback to the old behaviour (Kalle)
	Added support for loading helper classes into the runtime (Kalle)
	Added support for regular expressions within autoloading matches (Kalle)
	Added new functions: (Kalle)
	 - page_print()
	 - tuxxedo_error_list()
	 - tuxxedo_handler()
	Added the development tools theme to all default templates, including a new index page (Kalle)
	Added a new parameter on the view constructor to allow setting variables at construction time (Kalle)
	Added a new Template class thats not encapsulated within the MVC component (Kalle)
	Added more configurative options to the template compiler DevTool to allow more generic compilations (Kalle)
	Added the possibility to unload templates at runtime (Kalle)
	Added the permission database table and runtime defined constants (Kalle)
	Added support for exporting Docblock tags when running api_analyze.php (Kalle)
	Added a new DevTool class to impersonate a user (Kalle)
	Added a new method to the datamanager class to fetch the parent datamanager (Kalle)
	Added contexts to datamanagers so its easier for hooks to figure out what to do in a certain context (Kalle)
	Added a new template compiler option to make failed calls to test() verbose instead of silent (Kalle)
	Added support for database result set iterators (Kalle)
	Added a fetching mode and general fetch method in all database drivers (Kalle)
	Added countable support for database result sets (Kalle)
	Added missing datamanager phrases for a few datamanagers (Kalle)
	Added iterator support to datamanagers, making it possible to iterate over data in the datamanager (Kalle)
	Added a new namespace for design related classes/interfaces, such as the Invokable interface (Kalle)
	Added the Iteratable interface (Kalle)
	Added support for PSR-0 autoloader mode, disabled by default (Kalle)
	Added the Resetable datamanager hook (Kalle)
	Added a new autoloader method, routeAsCallback() (Kalle)
	Added a new 'void' state, that is set after a delete() call and prohibits usage of save() and validate() in datamanagers (Kalle)
	Added an auto refresh option to the session DevTool (Kalle)
	Added a detailed session information page to the session DevTool (Kalle)
	Added option categories (Kalle)
	Added the ability for datamanagers to tell the core whether to 're-identify' identifying names (Kalle)
	Added a new method to the registry class, invoke() to directly invoke new instances without registering the reference (Kalle)
	Added a new validation constant, VALIDATE_IDENTIFIER to auto validate and state configure the base adapter (Kalle)
	Added the 'getSource' method to the template compiler class (Kalle)
	Added a password protective mode to the DevTools application (Kalle)
	Added so that manual loading a style object may define its own storage engine and templates directory (Kalle)
	Added the isLoaded() method to the style storage engine base class (Kalle)
	Added the regenerate() method to the session class (Kalle)
	Added a new and encapsulated way to write bootstrapers (Kalle)
	Added support for __isset() and __unset() in the datastore and registry classes (Kalle)
	Added the unload() method to the registry class (Kalle)

	Changed the datamanager adapters to internally use the new initializer method (Kalle)
	Changed the datamanager to have hooks and migrated the APICache interface into it (Kalle)
	Changed CSRF tokens to be SHA1 hashed rather than MD5 hashed (Kalle)
	Changed the random string generator to be more variable (Kalle)
	Changed the debugging backtraces to not Engine backtrace caller (Kalle)
	Changed the datastore to skip attempting to reload elements if cache is called twice (Kalle)
	Changed the datamanager adapters to fetch the new identifer when inserting a new id record (Kalle)
	Changed the datamanager adapters to invalidate empty fields unless specified by the adapter (Kalle)
	Changed datamanager adapters to throw standard exceptions instead of basic ones in case of an error (Kalle)
	Changed the datamanager deletion method to signal adapters with cache hooks to rebuild the datastore (Kalle)
	Changed the styles to contain the ids of which templates thats assigned to the style (Kalle)
	Changed the name of the 'Filter' class to be 'Input' (Kalle)
	Changed style engines to load faster if multiple instances of the same handle have been loaded (Kalle)
	Changed the custom loading logic in datamanagers and style storage engines to autodetect custom classes (Kalle)
	Changed the MVC specific exceptions to use the concept of previous exceptions both internally and in the API (Kalle)
	Changed the view constructor, so that it supports setting the layout mode at instanciation (Kalle)
	Changed the views to not escape double quotes if the view has layout mode active (Kalle)
	Changed the undocumented docblocks while parsing the source in api_analyze.php to be more verbose (Kalle)
	Changed datamanagers that have the LOAD_ONLY option enabled data to be visiable thru the array access syntax (Kalle)
	Changed templateids from being a database field to be a virtually populated field from datastore.php (Kalle)
	Changed result sets' getNumRows() methods to return 0 if the result is destroyed (Kalle)
	Changed usergroupinfo to be an object rather than an array (Kalle)
	Changed the datastore reference name to be called 'datastore', rather than 'cache' (Kalle)
	Changed the Router class to reside under the MVC namespace (Kalle)
	Changed the autoloader methods add to be called routeAsPath() (Kalle)
	Changed the autoloader normalizer to fallback to regex if there is no paths (Kalle)
	Changed debug backtraces to show thrown exceptions (Kalle)
	Changed isDriverSupported() in the database component to use internal caching (Kalle)
	Changed the name of the 'Intl' exception, its now called 'Translated' (Kalle)
	Changed the default value of 'style_storage' from 'filesystem' to 'database' (Kalle)
	Changed SQL exceptions to require a driver that caused the exception to trigger (Kalle)
	Changed the user class to always initiate session (Kalle)
	Changed the 'name' field in the user datamanager to be optional (Kalle)
	Changed the codebase to require the filter extension (Kalle)
	Changed the method name 'free' to 'unload' in the datastore class for consistency (Kalle)
	Changed the template compiler to use a stack for recursive data for further expansion (Kalle)
	Changed the name of the 'get' method to 'getCompiledSource' in the template compiler class (Kalle)
	Changed the $restart parameter on \Tuxxedo\User::logout() to only trigger session termination if true (Kalle)
	Changed the default controller and action names to be 'main' (Kalle)
	Changed the controller dispatch() method to not return the content, but to print it directly (Kalle)
	Changed the CSRF code from the session class to the user class (Kalle)
	Changed the name of the dev script 'compile_devtools.php' to 'compile_dev.php' to allow future expansion (Kalle)

	Fixed api_analyze.php to respect curly braces to not identify some methods as 'static' (Kalle)
	Fixed api_analyze.php to parse methods/functions with inline closures correctly (Kalle)
	Fixed api_analyze.php to correctly resolve nested namespace aliases (Kalle)
	Fixed api_analyze.php to correctly resolve class and interface names without aliases but within a namespace (Kalle)
	Fixed api_analyze.php to correctly export classes/interface aliases (Kalle)
	Fixed api_analyze.php to correctly parse closure statements and not report false aliases
	Fixed api_analyze.php to correctly export constants within namespaces thats not within a class/interface (Kalle)
	Fixed fatal error if page() was called without the style component loaded (Kalle)
	Fixed namespace alias rules in functions.php to inherit the 'Exception' namespace (Kalle)
	Fixed error_reporting not being reset when testing compiled templates (Kalle)
	Fixed various aliasing rules all around the Engine (Kalle)
	Fixed possible error while attempting to display an error due to wrong initialization order in the development tools (Kalle)
	Fixed array handling of raw data when using the filter component using the ext/filter backend from PHP (Kalle)
	Fixed exception calls in datamanager adapters to resolve correctly (Kalle)
	Fixed version comparison logic in the requirements test (Kalle)
	Fixed the $goback parameter naming in page(), so that the go back button will work correct (Kalle)
	Fixed possible naming conflict error messages on the DevTools due to a JavaScript bug (Kalle)
	Fixed possible bugs in the old partically implemented permission system thats now fully functional (Kalle)
	Fixed a bug that would not trim fatal errors caught in the shutdown handler entirely (Kalle)
	Fixed a bug that would not trim paths in fatal errors aught in the shutdown handler (Kalle)
	Fixed a bug in \Tuxxedo\Intl::find() that would render the method useless (Kalle)
	Fixed debug backtraces to account for closures (Kalle)
	Fixed some autoloading issues on case sensitive file systems (Kalle)
	Fixed a loading error when trying to make an instance of an already loaded database driver (Kalle)
	Fixed the PDO driver's query method to return a correct value on INSERT/REPLACE queries (Kalle)
	Fixed validation of fields marked as 'virtual' so they don't always fail in datamanagers (Kalle)
	Fixed the restriction on the variable name 'lowered_name' when using the Template class (Kalle)
	Fixed getAffectedRows() to correctly work when using PDO (Kalle)
	Fixed isFreed() to return the correct return value for all drivers (Kalle)
	Fixed some dublicate phrases in the SQL files (Kalle)
	Fixed datamanagers to work correctly when changing the identifier to not leave a dublicate copy (Kalle)
	Fixed E_RECOVERABLE_ERROR errors not to show full path in some rare cases (Kalle)
	Fixed a bug in the template that datamanger that wouldn't delete the template on the file system (Kalle)
	Fixed the Input class to correctly return arrays when OPT_ARRAY is used (Kalle)
	Fixed a case sensitive issue with the 'allow*()' methods in the template compiler (Kalle)

	Removed the /dev/extra folder, as the bootstraper is long outdated and not maintained (Kalle)
	Removed the /dev/api/dumps folder, as dumps are now directly dumped into /dev/api/ (Kalle)
	Removed the persistent faking code in several database drivers (Kalle)
	Removed the $custom parameter on the database factory method, this is now auto detected (Kalle)
	Removed the setFieldType() method on the datamanager adapter main class (Kalle)
	Removed the $delay parameter on the datastore rebuild method (Kalle)
	Removed the $result parameter on the getAffectedRows method (Kalle)
	Removed the $session parameter on the user class constructor (Kalle)
	Removed the options editor in the DevTools that never really worked (Kalle)
	Removed the input filters, TYPE_STRING_EMPTY and TYPE_CALLBACK (Kalle)
	Removed the validate() method in the Input class (Kalle)
	Removed the is_valid_email() function (Kalle)
	Removed the default classes allowed from the template compiler (Kalle)
	Removed the 'Core' exception (Kalle)

	Template changes:
	 - Added
	   - error_listbit
	   - index
	 - Updated
	   - error
	   - footer
	   - header
	   - redirect


	Tuxxedo Engine 1.0.0
	------------------------------------------------

	Initial release